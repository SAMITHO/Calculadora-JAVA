/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.Graphics;
import java.awt.Image;
import java.util.Random;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.TimerTask;
import java.util.concurrent.TimeUnit;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;


/**
 *
 * @author Samuel Alexis Mercado Alvarez
 *         Univevrsidad Simon Bolivar
 *         202213224092
 *         Contacto: +57 3187032099
 *         samuelalexisalv@gmail.com
 */
public class prueba extends javax.swing.JFrame {
   Random ran = new Random();
    int [] vector1 = null;
    int [] vector2 = null;
    int [] [] matriz = null;
    int x; 
    int y;
    double res;
    boolean run = true;
    int i, j;
    FondoPanel fondo = new FondoPanel();
    

    /**
     * Creates new form NewJFrame
     */
    public prueba() {
        this.setContentPane(fondo);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        xtext = new javax.swing.JTextField();
        ytext = new javax.swing.JTextField();
        Salir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Respuesta = new javax.swing.JTextArea();
        limpiar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        Basicas = new javax.swing.JMenu();
        Suma = new javax.swing.JMenuItem();
        Resta = new javax.swing.JMenuItem();
        Multiplicacion = new javax.swing.JMenuItem();
        Division = new javax.swing.JMenuItem();
        Complejas = new javax.swing.JMenu();
        XaY = new javax.swing.JMenuItem();
        ValorMC = new javax.swing.JMenuItem();
        Factorco = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        NxM = new javax.swing.JMenuItem();
        ValormatorMa = new javax.swing.JMenuItem();
        Promedioma = new javax.swing.JMenuItem();
        Vectores = new javax.swing.JMenu();
        Llenarvectores = new javax.swing.JMenuItem();
        Mayorvector = new javax.swing.JMenuItem();
        PromedioVEC = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Valor X:");

        jLabel2.setText("Valor Y:");

        xtext.setText("0");

        ytext.setText("0");

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        Respuesta.setColumns(20);
        Respuesta.setRows(5);
        jScrollPane1.setViewportView(Respuesta);

        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Ingrese valores a X y Y para las ");

        jLabel4.setText("operaciones.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu2.setText("Operaciones");

        Basicas.setText("Basicas");

        Suma.setText("Suma");
        Suma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumaActionPerformed(evt);
            }
        });
        Basicas.add(Suma);

        Resta.setText("Resta");
        Resta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestaActionPerformed(evt);
            }
        });
        Basicas.add(Resta);

        Multiplicacion.setText("Multiplicacion");
        Multiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplicacionActionPerformed(evt);
            }
        });
        Basicas.add(Multiplicacion);

        Division.setText("Division");
        Division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivisionActionPerformed(evt);
            }
        });
        Basicas.add(Division);

        jMenu2.add(Basicas);

        Complejas.setText("Complejas");

        XaY.setText("X a la Y");
        XaY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XaYActionPerformed(evt);
            }
        });
        Complejas.add(XaY);

        ValorMC.setText("Valor medio");
        ValorMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValorMCActionPerformed(evt);
            }
        });
        Complejas.add(ValorMC);

        Factorco.setText("Factor comun");
        Factorco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FactorcoActionPerformed(evt);
            }
        });
        Complejas.add(Factorco);

        jMenu2.add(Complejas);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Matrices");

        NxM.setText("Llenar matriz NxM");
        NxM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NxMActionPerformed(evt);
            }
        });
        jMenu4.add(NxM);

        ValormatorMa.setText("Valor mayor");
        ValormatorMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValormatorMaActionPerformed(evt);
            }
        });
        jMenu4.add(ValormatorMa);

        Promedioma.setText("Promedio");
        Promedioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PromediomaActionPerformed(evt);
            }
        });
        jMenu4.add(Promedioma);

        jMenuBar1.add(jMenu4);

        Vectores.setText("Vectores");

        Llenarvectores.setText("Llenar dos vectores");
        Llenarvectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LlenarvectoresActionPerformed(evt);
            }
        });
        Vectores.add(Llenarvectores);

        Mayorvector.setText("Mayor vector");
        Mayorvector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MayorvectorActionPerformed(evt);
            }
        });
        Vectores.add(Mayorvector);

        PromedioVEC.setText("Promedio");
        PromedioVEC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PromedioVECActionPerformed(evt);
            }
        });
        Vectores.add(PromedioVEC);

        jMenuBar1.add(Vectores);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xtext, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ytext, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(limpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Salir))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(xtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ytext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Salir)
                    .addComponent(limpiar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void SumaActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        Respuesta.setText(null);
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        int suma = x + y;
        Respuesta.append("La suma es: "+ suma);
        
        
        
    }                                    

    private void ValorMCActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        Respuesta.setText(null);
        x = Integer.parseInt(xtext.getText());
        y = Integer.parseInt(ytext.getText());
        res = x + y;
        res = res/2; 
        Respuesta.append("El valor medio es:  "+ res);

    }                                       

    private void FactorcoActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        Respuesta.setText(null);
        x = Integer.parseInt(xtext.getText());
        y = Integer.parseInt(ytext.getText());
         while(x != y)
            if(x>y)
                x= x-y;
            else
                y= y -x;
         
        Respuesta.append("El factor comun es: =  "+ x);
        
    }                                        

    private void ValormatorMaActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        Respuesta.setText(null);
        x = Integer.parseInt(xtext.getText());
        y = Integer.parseInt(ytext.getText());
        int mat[][] = new int[x][y];
         for (int i = 0; i < x; i++) {
                    for (int j = 0; j < y; j++) {
                        mat[i][j] = ran.nextInt(1000);
                    }
                }
                Respuesta.append("Matriz: \n");
                for (int i = 0; i < x; i++) {
                    for (int j = 0; j < y; j++) {
                        Respuesta.append("[" + mat[i][j] + "] ");
                    }
                    Respuesta.append("\n");
                }
        int mayor = mat[0][0];
                for (int i = 0; i < x; i++) {
                    for (int j = 0; j < y; j++) {
                        if (mat[i][j] > mayor) {
                            mayor = mat[i][j];
                        }
                    }
                }
                Respuesta.append("\nEl valor mayor de la matriz es: [" + mayor + "] ");
    }                                            

    private void RestaActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        Respuesta.setText(null);
        x = Integer.parseInt(xtext.getText());
        y = Integer.parseInt(ytext.getText());
        int rest = x - y;
        Respuesta.append("La resta es:  "+ rest);
    }                                     

    private void MultiplicacionActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        Respuesta.setText(null);
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        res = x*y;
        Respuesta.append("La multiplicacion es: "+ res);
    }                                              

    private void DivisionActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
         Respuesta.setText(null);
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        res = x/y;
        Respuesta.append("La division es: "+ res);
    }                                        

    private void LlenarvectoresActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        Respuesta.setText(null);
        
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        
        int v1 [] = new int [x];
        int v2 [] = new int [y];
         for (int i = 0; i < x; i++) {
                    v1[i] = ran.nextInt(1000);
                }

                for (int i = 0; i < y; i++) {
                    v2[i] = ran.nextInt(1000);
                }
                Respuesta.append("Vector 1: ");
                for (int i = 0; i < x; i++) {
                    Respuesta.append("[" + v1[i] + "] ");
                }
                Respuesta.append("\nVector 2: ");
                for (int i = 0; i < y; i++) {
                    Respuesta.append("[" + v2[i] + "] ");
                }
        
    
    }                                              

    private void MayorvectorActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        Respuesta.setText(null);
        
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        
        int v1 [] = new int [x];
        int v2 [] = new int [y];
         for (int i = 0; i < x; i++) {
                    v1[i] = ran.nextInt(1000);
                }

                for (int i = 0; i < y; i++) {
                    v2[i] = ran.nextInt(1000);
                }
                Respuesta.append("Vector 1: ");
                for (int i = 0; i < x; i++) {
                    Respuesta.append("[" + v1[i] + "] ");
                }
                Respuesta.append("\nVector 2: ");
                for (int i = 0; i < y; i++) {
                    Respuesta.append("[" + v2[i] + "] ");
                }
        
        int mayor = v1[0];
                for (int i = 0; i < x; i++) {
                    if (v1[i] > mayor) {
                        mayor = v1[i];
                    }
                }
                Respuesta.append("\nEl valor mayor del primer vector es: [" + mayor + "] ");
                mayor = v2[0];
                for (int i = 0; i < y; i++) {
                    if (v2[i] > mayor) {
                        mayor = v2[i];
                    }
                }
                Respuesta.append("\nEl valor mayor del segundo vector es: [" + mayor + "] ");
        
    }                                           

    private void PromedioVECActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        Respuesta.setText(null);
        
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        
        int v1 [] = new int [x];
        int v2 [] = new int [y];
        for (int i = 0; i < x; i++) {
                    v1[i] = ran.nextInt(1000);
                }

                for (int i = 0; i < y; i++) {
                    v2[i] = ran.nextInt(1000);
                }
        int suma = 0;
                for(int i = 0; i < v1.length; i++){
                    suma = suma + v1[i];
                }
                int prom = suma / v1.length;
                Respuesta.append("\nEl promedio del primer vector es: [" + prom + "] ");
                int suma2 = 0;
                for(int i = 0; i < v2.length; i++){
                    suma2 = suma2 + v2[i];
                }
                int prom2 = suma / v2.length;
                Respuesta.append("\nEl promedio del segundo vector es: [" + prom + "] ");
    }                                           

    private void NxMActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        Respuesta.setText(null); 
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        int mat[][] = new int[x][y];
         for (int i = 0; i < x; i++) {
                    for (int j = 0; j < y; j++) {
                        mat[i][j] = ran.nextInt(1000);
                    }
                }
                Respuesta.append("Matriz: \n");
                for (int i = 0; i < x; i++) {
                    for (int j = 0; j < y; j++) {
                        Respuesta.append("[" + mat[i][j] + "] ");
                    }
                    Respuesta.append("\n");
                }
        
    }                                   
    private void PromediomaActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        Respuesta.setText(null); 
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        int mat[][] = new int[x][y];
         for (int i = 0; i < x; i++) {
                    for (int j = 0; j < y; j++) {
                        mat[i][j] = ran.nextInt(1000);
                    }
                }
                for (int i = 0; i < x; i++) {
                    for (int j = 0; j < y; j++) {
                       
                    }
                    
        int suma = 0;
                for (i = 0; i < x; i++) {
                    for( j = 0; j < y; j++){
                        suma = suma + mat[i][j];
                    }
                    
                }
                int prom = suma / (x*y);
                Respuesta.append("\nEl promedio de la matriz es: "+prom );
    }                                          
    }
    private void XaYActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        Respuesta.setText(null);
        double resp;
        x= Integer.parseInt(xtext.getText());
        y= Integer.parseInt(ytext.getText());
        resp = Math.pow(x, y);
        Respuesta.append("X a la Y es: " + resp);    
        
    }                                   

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:\
        System.exit(0);
    }                                     

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        Respuesta.setText(null);
        xtext.setText(null);
        ytext.setText(null);
    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prueba().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenu Basicas;
    private javax.swing.JMenu Complejas;
    private javax.swing.JMenuItem Division;
    private javax.swing.JMenuItem Factorco;
    private javax.swing.JMenuItem Llenarvectores;
    private javax.swing.JMenuItem Mayorvector;
    private javax.swing.JMenuItem Multiplicacion;
    private javax.swing.JMenuItem NxM;
    private javax.swing.JMenuItem PromedioVEC;
    private javax.swing.JMenuItem Promedioma;
    private javax.swing.JTextArea Respuesta;
    private javax.swing.JMenuItem Resta;
    private javax.swing.JButton Salir;
    private javax.swing.JMenuItem Suma;
    private javax.swing.JMenuItem ValorMC;
    private javax.swing.JMenuItem ValormatorMa;
    private javax.swing.JMenu Vectores;
    private javax.swing.JMenuItem XaY;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiar;
    private javax.swing.JTextField xtext;
    private javax.swing.JTextField ytext;
    // End of variables declaration                   
class FondoPanel extends JPanel{
    private Image imagen;
    @Override
    public void paint(Graphics g){
        //imagen = new ImageIcon(getClass().getResource("/Imag/mat.png")).getImage();
        g.drawImage(imagen, 0, 0, getWidth(),getWidth(),this );
        setOpaque(false);
        super.paint(g);
}
}
}
